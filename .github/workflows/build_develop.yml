# Github actions script to build the project develop branch
name: Build Develop

on:
  push:
    branches:
      - develop
      - release/*
      - feature/*
  pull_request:
    branches:
      - develop

jobs:
  build_and_test_unixlike:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false  # True to stop on the first job failing
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        build_type:
          - Debug
          - Release
          - MinSizeRel
        compiler:
          - gcc
          - clang
    steps:
      - uses: actions/checkout@v2
      - name: Check the compiler version
        run: |
          cmake --version
          ${{ matrix.compiler }} --version
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_C_COMPILER=${{matrix.compiler}}
      - name: Build all targets
        run: cmake --build ${{github.workspace}}/build --parallel 8 --clean-first
      - name: Test with Atto
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure

  build_and_test_windows:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false  # True to stop on the first job failing
      matrix:
        os:
          - windows-latest
        build_type:
          - Debug
          - Release
          - MinSizeRel
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1  # Configure the Developer Prompt for MS Visual C++ (MSVC)
        with:
          arch: amd64
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      - name: Build all targets
        run: cmake --build ${{github.workspace}}/build --parallel 8 --clean-first
      - name: Test with Atto
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure
